<?php

// automatically generated by the FlatBuffers compiler, do not modify

namespace App\Flatbuffers;

use Google\FlatBuffers\ByteBuffer;
use Google\FlatBuffers\FlatBufferBuilder;
use Google\FlatBuffers\Struct;
use Google\FlatBuffers\Table;

class CategoryGroup extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return CategoryGroup
     */
    public static function getRootAsCategoryGroup(ByteBuffer $bb)
    {
        $obj = new self();

        return $obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb);
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return CategoryGroup
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;

        return $this;
    }

    public function getCreatedAt()
    {
        $o = $this->__offset(4);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return int
     */
    public function getId()
    {
        $o = $this->__offset(6);

        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    public function getName()
    {
        $o = $this->__offset(8);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getUpdatedAt()
    {
        $o = $this->__offset(10);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCategoryGroup(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return CategoryGroup
     */
    public static function createCategoryGroup(FlatBufferBuilder $builder, $created_at, $id, $name, $updated_at)
    {
        $builder->startObject(4);
        self::addCreatedAt($builder, $created_at);
        self::addId($builder, $id);
        self::addName($builder, $name);
        self::addUpdatedAt($builder, $updated_at);
        $o = $builder->endObject();

        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCreatedAt(FlatBufferBuilder $builder, $createdAt)
    {
        $builder->addOffsetX(0, $createdAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addIntX(1, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addOffsetX(2, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUpdatedAt(FlatBufferBuilder $builder, $updatedAt)
    {
        $builder->addOffsetX(3, $updatedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCategoryGroup(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();

        return $o;
    }
}
