<?php

// automatically generated by the FlatBuffers compiler, do not modify

namespace App\Flatbuffers;

use Google\FlatBuffers\ByteBuffer;
use Google\FlatBuffers\FlatBufferBuilder;
use Google\FlatBuffers\Struct;
use Google\FlatBuffers\Table;

class Category extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return Category
     */
    public static function getRootAsCategory(ByteBuffer $bb)
    {
        $obj = new self();

        return $obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb);
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return Category
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;

        return $this;
    }

    /**
     * @return bool
     */
    public function getActive()
    {
        $o = $this->__offset(4);

        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @return int
     */
    public function getCategorygroupId()
    {
        $o = $this->__offset(6);

        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    public function getColor()
    {
        $o = $this->__offset(8);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getCreatedAt()
    {
        $o = $this->__offset(10);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getIconUrl()
    {
        $o = $this->__offset(12);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return int
     */
    public function getId()
    {
        $o = $this->__offset(14);

        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    public function getImageUrl()
    {
        $o = $this->__offset(16);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getName()
    {
        $o = $this->__offset(18);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return short
     */
    public function getPoints()
    {
        $o = $this->__offset(20);

        return $o != 0 ? $this->bb->getShort($o + $this->bb_pos) : 0;
    }

    public function getUpdatedAt()
    {
        $o = $this->__offset(22);

        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCategory(FlatBufferBuilder $builder)
    {
        $builder->StartObject(10);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return Category
     */
    public static function createCategory(FlatBufferBuilder $builder, $active, $categorygroup_id, $color, $created_at, $icon_url, $id, $image_url, $name, $points, $updated_at)
    {
        $builder->startObject(10);
        self::addActive($builder, $active);
        self::addCategorygroupId($builder, $categorygroup_id);
        self::addColor($builder, $color);
        self::addCreatedAt($builder, $created_at);
        self::addIconUrl($builder, $icon_url);
        self::addId($builder, $id);
        self::addImageUrl($builder, $image_url);
        self::addName($builder, $name);
        self::addPoints($builder, $points);
        self::addUpdatedAt($builder, $updated_at);
        $o = $builder->endObject();

        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addActive(FlatBufferBuilder $builder, $active)
    {
        $builder->addBoolX(0, $active, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addCategorygroupId(FlatBufferBuilder $builder, $categorygroupId)
    {
        $builder->addIntX(1, $categorygroupId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addColor(FlatBufferBuilder $builder, $color)
    {
        $builder->addOffsetX(2, $color, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCreatedAt(FlatBufferBuilder $builder, $createdAt)
    {
        $builder->addOffsetX(3, $createdAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addIconUrl(FlatBufferBuilder $builder, $iconUrl)
    {
        $builder->addOffsetX(4, $iconUrl, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addIntX(5, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addImageUrl(FlatBufferBuilder $builder, $imageUrl)
    {
        $builder->addOffsetX(6, $imageUrl, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addOffsetX(7, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param short
     * @return void
     */
    public static function addPoints(FlatBufferBuilder $builder, $points)
    {
        $builder->addShortX(8, $points, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUpdatedAt(FlatBufferBuilder $builder, $updatedAt)
    {
        $builder->addOffsetX(9, $updatedAt, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCategory(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();

        return $o;
    }
}
